services:
  op-geth:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:v1.101503.1
    ports:
    - 8545 # HTTP
    - 8546 # WS
    - 8551 # Auth
    volumes:
    - ./deployer/jwt.txt:/etc/optimism/jwt.txt:ro
    - ./datadir:/datadir
    environment:
    - environment=develop
    command: >
      --datadir /datadir
      --http
      --http.corsdomain="*"
      --http.vhosts="*"
      --http.addr=0.0.0.0
      --http.port=8545
      --http.api=admin,engine,net,eth,web3,debug,miner
      --ws
      --ws.addr=0.0.0.0
      --ws.port=8546
      --ws.origins="*"
      --ws.api=admin,engine,net,eth,web3,debug,miner
      --log.format=json
      --syncmode="full"
      --gcmode=archive
      --maxpeers=1
      --networkid=${CHAIN_ID}
      --authrpc.vhosts="*"
      --authrpc.addr=0.0.0.0
      --authrpc.port=8551
      --authrpc.jwtsecret=/etc/optimism/jwt.txt
      --rollup.disabletxpoolgossip=true
      --rpc.allow-unprotected-txs
      --db.engine=pebble
      --state.scheme=hash

  op-node:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.12.0
    ports:
    - 9545
    volumes:
    - ./deployer/jwt.txt:/etc/optimism/jwt.txt:ro
    - ./deployer/rollup.json:/etc/optimism/rollup.json:ro
    command: > 
      op-node
      --l2=http://op-geth:8551
      --l2.jwt-secret=/etc/optimism/jwt.txt
      --sequencer.enabled
      --sequencer.l1-confs=5
      --verifier.l1-confs=4
      --rollup.config=/etc/optimism/rollup.json
      --rpc.addr=0.0.0.0
      --p2p.disable
      --rpc.enable-admin
      --p2p.sequencer.key=${SEQUENCER_PRIVATE_KEY}
      --l1=${L1_RPC_URL_WS}
      --l1.beacon=${L1_RPC_URL_HTTP}

  op-batcher:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher:v1.11.5
    ports:
    - 8548
    command: > 
      op-batcher
      --l2-eth-rpc=http://op-geth:8545
      --rollup-rpc=http://op-node:9545
      --poll-interval=1s
      --sub-safety-margin=6
      --num-confirmations=1
      --safe-abort-nonce-too-low-count=3
      --resubmission-timeout=30s
      --rpc.addr=0.0.0.0
      --rpc.port=8548
      --rpc.enable-admin
      --max-channel-duration=25
      --throttle-threshold=0
      --l1-eth-rpc=${L1_RPC_URL_HTTP}
      --private-key=${BATCHER_PRIVATE_KEY}
      --data-availability-type=blobs

  db:
    image: postgres:15
    ports:
    - 5432
    volumes:
    - ./postgres-datadir:/var/lib/postgresql/data
    environment:
    - POSTGRES_USER=bridge_user
    - POSTGRES_PASSWORD=master_password
    - POSTGRES_DB=bridge_db
    command: >
      postgres -N 500
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bridge_user -d bridge_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  bridge:
    image: hermeznetwork/zkevm-bridge-service:v0.6.0-RC16
    ports:
      - 8080
    volumes:
      - ./config/bridge.toml:/etc/bridge/config.toml:ro
      - ./keystore/claimtx.keystore:/etc/bridge/claimtx.keystore:ro
    restart: always
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-bridge run --cfg /etc/bridge/config.toml"

  aggkit:
    image: ghcr.io/agglayer/aggkit:0.1.0-beta4
    volumes:
    - ./config/aggkit.toml:/etc/aggkit/config.toml:ro
    - ./aggkit-datadir/:/data
    - ./keystore/sequencer.keystore:/etc/aggkit/sequencer.keystore:ro
    - ./keystore/aggoracle.keystore:/etc/aggkit/aggoracle.keystore:ro
    command: >
      aggkit run --cfg=/etc/aggkit/config.toml --components=aggsender,aggoracle
